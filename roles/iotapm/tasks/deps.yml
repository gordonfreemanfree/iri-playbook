- name: set variables centos/redhat
  set_fact:
    nodejs_bin: /usr/bin/node
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: set variables debian/ubuntu
  set_fact:
    nodejs_bin: /usr/bin/nodejs
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: check nodejs minimum required version
  shell: "{{ nodejs_bin }} --version | grep -oh '^v{{ nodesource_version }}'"
  failed_when: false
  changed_when: false
  register: nodejs_version

- name: ensure npm removed
  yum:
    name: npm
    state: absent
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

# Ubuntu
- name: get nodesource repo
  shell: "curl -sL https://deb.nodesource.com/setup_{{ nodesource_version }}.x | bash -"
  when: "nodejs_version.rc == 1 and (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')"

# Centos
- name: get nodesource repo
  shell: "curl -sL https://rpm.nodesource.com/setup_{{ nodesource_version }}.x | bash -"
  when: "nodejs_version.rc == 1 and (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux')"

# Required
- name: Install epel-release
  yum:
    state: latest
    name: epel-release
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

# NPM update
- name: Update npm, this might take a while...
  npm:
    name: npm
    state: latest
    global: yes

- name: Install some packages
  yum:
    name: "{{ packages }}"
  vars:
    packages:
      - make
      - gcc-c++
      - nodejs
      - firewalld
      - curl
      - lsof
      - python-pip
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Install nginx packages
  yum:
    name: "{{ packages }}"
  vars:
    packages:
      - python-passlib
      - httpd-tools
      - nginx
  when: >
        install_nginx is defined and install_nginx and
        (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux')

- name: Install some packages
  apt:
    name: "{{ packages }}"
    update_cache: yes
  vars:
    packages:
      - make
      - g++
      - lsof
      - curl
      - nodejs
      - python-pip
      - python3-pip
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: install pip requirements, to support remote installations
  pip:
    name: passlib

- name: Install nginx packages
  apt:
    name: "{{ packages }}"
    update_cache: yes
  vars:
    packages:
      - nginx
      - python-passlib
      - apache2-utils
  when: >
        install_nginx is defined and install_nginx and
        (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')

- name: Install iota-pm package
  npm:
    name: iota-pm
    version: "{{ iotapm_version }}"
    global: yes
  tags:
    - iotapm_npm
